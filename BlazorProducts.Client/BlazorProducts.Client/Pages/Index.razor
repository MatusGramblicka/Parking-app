@page "/index"

<AuthorizeView>
    <Authorized>
        @if (tenantsForDay.Any())
        {   <div>Your booked days in this calendar are: </div>
            @foreach (var tenantsDays in tenantsDayActualSelection)
            {
            <div>
                @tenantsDays
            </div>
            }
        <table class="box">
            <thead>
                <tr>
                    <th class="align-middle" scope="col" style="width:10px">Mon</th>
                    <th class="align-middle" scope="col" style="width:10px">Tue</th>
                    <th class="align-middle" scope="col" style="width:10px">Wed</th>
                    <th class="align-middle" scope="col" style="width:10px">Thu</th>
                    <th class="align-middle" scope="col" style="width:10px">Fri</th>
                    <th class="align-middle" scope="col" style="width:10px">Sat</th>
                    <th class="align-middle" scope="col" style="width:10px">Sun</th>
                </tr>
            </thead>
            <tbody>     
                <tr>
                @for (int i = 0; i < 7; i++)
                {
                    <td class="align-middle" style="width:10px">
                        @if (i >= dayOfWeekLocalNumber)
                        {
                            var nextDayStringRepr = tenantsForDay[0][i - dayOfWeekLocalNumber].DayId;
                            var nextDayStringReprToShowOnUi = AddDotsAndRemoveZeros(nextDayStringRepr);                          

                            var calendarButtontype = GetTypeOfCalendarDay(tenantsForDay[0][i - dayOfWeekLocalNumber].TenantId.Count, tenantsDaysForUI, nextDayStringRepr);

                            @if (calendarButtontype == "btn-outline-danger")
                            {
                                 <button type="button" class="btn @calendarButtontype">
                                    @nextDayStringReprToShowOnUi
                                 </button>
                            }
                            else
                            {
                                <button type="button" class="btn @calendarButtontype" @onclick="() => BookOrFreeDay(nextDayStringRepr)">
                                    @nextDayStringReprToShowOnUi
                                </button>
                            }
                        }
                    </td>            
                }
                </tr>
                <tr>
                @for (int i = 7; i < 14; i++)
                {
                    <td class="align-middle" style="width:10px">
                        @if (i >= 7)
                        {                            
                            var nextDayStringRepr = tenantsForDay[1][i-7].DayId;
                            var nextDayStringReprToShowOnUi = AddDotsAndRemoveZeros(nextDayStringRepr);

                            var calendarButtontype = GetTypeOfCalendarDay(tenantsForDay[1][i - 7].TenantId.Count, tenantsDaysForUI, nextDayStringRepr);

                            @if (calendarButtontype == "btn-outline-danger")
                            {
                                 <button type="button" class="btn @calendarButtontype">
                                    @nextDayStringReprToShowOnUi
                                 </button>
                            }
                            else
                            {
                                <button type="button" class="btn @calendarButtontype" @onclick="() => BookOrFreeDay(nextDayStringRepr)">
                                    @nextDayStringReprToShowOnUi
                                </button>
                            }                   
                        }
                    </td>
                }
                </tr>
                <tr>
                @for (int i = 14; i < 21; i++)
                {
                    <td class="align-middle" style="width:10px">
                        @if (i >= 14)
                        {
                            var nextDayStringRepr = tenantsForDay[2][i - 14].DayId;
                            var nextDayStringReprToShowOnUi = AddDotsAndRemoveZeros(nextDayStringRepr);

                            var calendarButtontype = GetTypeOfCalendarDay(tenantsForDay[2][i - 14].TenantId.Count, tenantsDaysForUI, nextDayStringRepr);

                            @if (calendarButtontype == "btn-outline-danger")
                            {
                                    <button type="button" class="btn @calendarButtontype">
                                    @nextDayStringReprToShowOnUi
                                    </button>
                            }
                            else
                            {
                                <button type="button" class="btn @calendarButtontype" @onclick="() => BookOrFreeDay(nextDayStringRepr)">
                                    @nextDayStringReprToShowOnUi
                                </button>
                            } 
                        }
                    </td>            
                }
                </tr>
                <tr>
                @for (int i = 21; i < 28; i++)
                {
                    <td class="align-middle" style="width:10px">
                        @if (i >= 21)
                        {
                            if (i - dayOfWeekLocalNumber < nuberOfDaysToShow)
                            {
                                var nextDayStringRepr = tenantsForDay[3][i - 21].DayId;
                                var nextDayStringReprToShowOnUi = AddDotsAndRemoveZeros(nextDayStringRepr);

                                var calendarButtontype = GetTypeOfCalendarDay(tenantsForDay[3][i - 21].TenantId.Count, tenantsDaysForUI, nextDayStringRepr);

                                @if (calendarButtontype == "btn-outline-danger")
                                {
                                     <button type="button" class="btn @calendarButtontype">
                                        @nextDayStringReprToShowOnUi
                                     </button>
                                }
                                else
                                {
                                    <button type="button" class="btn @calendarButtontype" @onclick="() => BookOrFreeDay(nextDayStringRepr)">
                                        @nextDayStringReprToShowOnUi
                                    </button>
                                }                
                            }
                        }
                    </td>            
                }
                </tr>   
                <tr>
                @for (int i = 28; i < 35; i++)
                {
                    <td class="align-middle" style="width:10px">
                        @if (i >= 28)
                        {
                            if (i - dayOfWeekLocalNumber < nuberOfDaysToShow)
                            {
                                var nextDayStringRepr = tenantsForDay[4][i - 28].DayId;
                                var nextDayStringReprToShowOnUi = AddDotsAndRemoveZeros(nextDayStringRepr);

                                var calendarButtontype = GetTypeOfCalendarDay(tenantsForDay[4][i - 28].TenantId.Count, tenantsDaysForUI, nextDayStringRepr);

                                @if (calendarButtontype == "btn-outline-danger")
                                {
                                     <button type="button" class="btn @calendarButtontype">
                                        @nextDayStringReprToShowOnUi
                                     </button>
                                }
                                else
                                {
                                    <button type="button" class="btn @calendarButtontype" @onclick="() => BookOrFreeDay(nextDayStringRepr)">
                                        @nextDayStringReprToShowOnUi
                                    </button>
                                }
                            }
                        }
                    </td>
                }
                </tr>
                <tr>
                @for (int i = 35; i < 42 - dayOfWeekLocalNumber + 1; i++)
                {
                    <td class="align-middle" style="width:10px">
                        @if (i >= 35)
                        {
                            if (i - dayOfWeekLocalNumber < nuberOfDaysToShow)
                            {
                                var nextDayStringRepr = tenantsForDay[5][i - 35].DayId;
                                var nextDayStringReprToShowOnUi = AddDotsAndRemoveZeros(nextDayStringRepr);

                                var calendarButtontype = GetTypeOfCalendarDay(tenantsForDay[5][i - 35].TenantId.Count, tenantsDaysForUI, nextDayStringRepr);

                                @if (calendarButtontype == "btn-outline-danger")
                                {
                                     <button type="button" class="btn @calendarButtontype">
                                        @nextDayStringReprToShowOnUi
                                     </button>
                                }
                                else
                                {
                                    <button type="button" class="btn @calendarButtontype" @onclick="() => BookOrFreeDay(nextDayStringRepr)">
                                        @nextDayStringReprToShowOnUi
                                    </button>
                                }
                            }
                        }
                    </td>
                }
                </tr>
            </tbody>
        </table>
        }
        else
        {
            <table class="box">
                <thead>
                    <tr>
                        <th class="align-middle" scope="col" style="width:10px">Mon</th>
                        <th class="align-middle" scope="col" style="width:10px">Tue</th>
                        <th class="align-middle" scope="col" style="width:10px">Wed</th>
                        <th class="align-middle" scope="col" style="width:10px">Thu</th>
                        <th class="align-middle" scope="col" style="width:10px">Fri</th>
                        <th class="align-middle" scope="col" style="width:10px">Sat</th>
                        <th class="align-middle" scope="col" style="width:10px">Sun</th>
                    </tr>
                </thead>
            </table>
            <span>
                Loading calendar...
            </span>
        }
    </Authorized>
</AuthorizeView>